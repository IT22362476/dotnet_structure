{
  "openapi": "3.0.1",
  "info": {
    "title": "Dayaratne ERP Inv API",
    "description": "A Dayaratne ERP Inv API Version 1",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Kokila Sanjeewa",
      "url": "https://www.facebook.com/kokila.sanjeewa",
      "email": ""
    },
    "license": {
      "name": "Use under LICX",
      "url": "https://example.com/license"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/inv/BinLocation": {
      "get": {
        "tags": [
          "BinLocation"
        ],
        "summary": "Retrieves all skuBinAlocations.",
        "operationId": "GetBinLocation",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBinLocationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBinLocationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBinLocationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/BinLocation/{id}": {
      "get": {
        "tags": [
          "BinLocation"
        ],
        "summary": "Retrieves an skuBinAlocation by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skuBinAlocation to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BinLocation"
        ],
        "summary": "Deletes an skuBinAlocation by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skuBinAlocation to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/BinLocation/Create": {
      "post": {
        "tags": [
          "BinLocation"
        ],
        "summary": "Creates a new bin location.",
        "requestBody": {
          "description": "The command containing the bin location to create.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBinLocationCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBinLocationCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBinLocationCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBinLocationCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/BinLocation/Update": {
      "put": {
        "tags": [
          "BinLocation"
        ],
        "summary": "Update a update binlocation.",
        "requestBody": {
          "description": "The command containing the brand and associated item types to update.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBinLocationCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBinLocationCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBinLocationCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBinLocationCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/BinLocation/GetSkuBinLocation/{itemSerialID}": {
      "get": {
        "tags": [
          "BinLocation"
        ],
        "summary": "Retrieves an skuBinAlocation by item ID.",
        "parameters": [
          {
            "name": "itemSerialID",
            "in": "path",
            "description": "The skuBinAlocation to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/BinLocation/paged": {
      "get": {
        "tags": [
          "BinLocation"
        ],
        "summary": "Get a skuBinAlocation by paginated query.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationsWithPaginationDtoPaginatedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationsWithPaginationDtoPaginatedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBinLocationsWithPaginationDtoPaginatedResultResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Brand": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetBrand",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBrandDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBrandDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBrandDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Brand"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateBrand",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Brand"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Brand/{id}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Brand"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/BrandItemType/GetBrandItemType": {
      "get": {
        "tags": [
          "BrandItemType"
        ],
        "summary": "Retrieves all BrandItemType entities with optional navigation properties.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBrandItemTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBrandItemTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBrandItemTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/BrandItemType/{id}": {
      "get": {
        "tags": [
          "BrandItemType"
        ],
        "summary": "Retrieves a Brand Item Type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of theBrand Item Type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandItemTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandItemTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandItemTypeDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BrandItemType"
        ],
        "summary": "Deletes a Brand Item Type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Brand Item Type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/BrandItemType/Create": {
      "post": {
        "tags": [
          "BrandItemType"
        ],
        "summary": "Creates a new brand item type.",
        "requestBody": {
          "description": "The command containing the brand and associated item types to create.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandItemTypeCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandItemTypeCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandItemTypeCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandItemTypeCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/BrandItemType/Update": {
      "put": {
        "tags": [
          "BrandItemType"
        ],
        "summary": "Update a new brand item type.",
        "requestBody": {
          "description": "The command containing the brand and associated item types to update.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandItemTypeCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandItemTypeCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandItemTypeCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandItemTypeCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/CompatibleItem": {
      "get": {
        "tags": [
          "CompatibleItem"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetCompatibleItem",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCompatibleItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCompatibleItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCompatibleItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompatibleItem"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateCompatibleItem",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompatibleItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompatibleItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompatibleItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompatibleItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompatibleItem"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompatibleItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompatibleItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompatibleItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompatibleItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/CompatibleItem/{id}": {
      "get": {
        "tags": [
          "CompatibleItem"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompatibleItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompatibleItem"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/CusPriceCategory": {
      "get": {
        "tags": [
          "CusPriceCategory"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetCusPriceCategory",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CusPriceCategory"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateCusPriceCategory",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCusPriceCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCusPriceCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCusPriceCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCusPriceCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CusPriceCategory"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCusPriceCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCusPriceCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCusPriceCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCusPriceCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/CusPriceCategory/{id}": {
      "get": {
        "tags": [
          "CusPriceCategory"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCusPriceCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CusPriceCategory"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/GRN": {
      "get": {
        "tags": [
          "GRN"
        ],
        "summary": "Retrieves all grns.",
        "operationId": "GetGRN",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetGRNDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetGRNDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetGRNDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GRN"
        ],
        "summary": "Creates a new grn.",
        "operationId": "CreateGRN",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the grn to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGRNDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGRNDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGRNDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGRNDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "GRN"
        ],
        "summary": "Updates an existing grn.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the grn updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGRNDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGRNDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGRNDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGRNDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/GRN/{id}": {
      "get": {
        "tags": [
          "GRN"
        ],
        "summary": "Retrieves an grn by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the grn to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGRNDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GRN"
        ],
        "summary": "Deletes an grn by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the grn to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/GRN/item/{id}": {
      "get": {
        "tags": [
          "GRN"
        ],
        "summary": "Retrieves a GRN by item ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the GRN to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetGRNDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetGRNDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetGRNDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves all invoice.",
        "operationId": "GetInvoice",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetInvoiceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetInvoiceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetInvoiceDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Creates a new invoice.",
        "operationId": "CreateInvoice",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the invoice to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Updates an existing invoice.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the invoice updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Invoice/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves an invoice by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the invoice to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Deletes an invoice by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the invoice to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/Invoice/GRN/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves a GRN by item ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the GRN to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetInvoiceByGRNDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetInvoiceByGRNDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetInvoiceByGRNDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Item/codes/all": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Retrieves all item codes.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemCodeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemCodeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemCodeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Item": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Retrieves all items.",
        "operationId": "GetItems",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Item"
        ],
        "summary": "Updates an existing item.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the item updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Item/{id}": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Retrieves an item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the item to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Item"
        ],
        "summary": "Deletes an item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the item to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/Item/Create": {
      "post": {
        "tags": [
          "Item"
        ],
        "summary": "Creates a new item.",
        "requestBody": {
          "description": "The command containing the item to create.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Item/Update": {
      "patch": {
        "tags": [
          "Item"
        ],
        "summary": "update a item.",
        "requestBody": {
          "description": "The command containing the item to update.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Item/paged": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Get a uom conversion by paginated query.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemsWithPaginationDtoPaginatedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemsWithPaginationDtoPaginatedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemsWithPaginationDtoPaginatedResultResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Item/approved/paged": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Get a uom conversion by paginated query.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemsWithPaginationDtoPaginatedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemsWithPaginationDtoPaginatedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemsWithPaginationDtoPaginatedResultResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/ItemType": {
      "get": {
        "tags": [
          "ItemType"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetItemType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemTypeDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemType"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateGetItemType",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTypeDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemType"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemTypeDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/ItemType/{id}": {
      "get": {
        "tags": [
          "ItemType"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemTypeDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemType"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/MainCategory": {
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetMainCategory",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetMainCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetMainCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetMainCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateMainCategory",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMainCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMainCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMainCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMainCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMainCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMainCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMainCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMainCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/MainCategory/{id}": {
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/Model/GetModels": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Retrieves all BrandItemType entities with optional navigation properties.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetModelDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetModelDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetModelDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Model/{id}": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Model"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/Model": {
      "post": {
        "tags": [
          "Model"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateModel",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModelDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Model"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModelDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModelDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Rack": {
      "get": {
        "tags": [
          "Rack"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetRack",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRackDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRackDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRackDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Rack/GetNextRackCode": {
      "get": {
        "tags": [
          "Rack"
        ],
        "summary": "Retrieves the Rack Code.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Rack/{id}": {
      "get": {
        "tags": [
          "Rack"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRackDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRackDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRackDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rack"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/Rack/Create": {
      "post": {
        "tags": [
          "Rack"
        ],
        "summary": "Creates a new item.",
        "requestBody": {
          "description": "The command containing the item to create.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRackCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRackCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRackCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRackCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Rack/Update": {
      "put": {
        "tags": [
          "Rack"
        ],
        "summary": "Update a new brand item type.",
        "requestBody": {
          "description": "The command containing the brand and associated item types to update.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRackCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRackCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRackCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRackCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Rack/paged": {
      "get": {
        "tags": [
          "Rack"
        ],
        "summary": "Get a uom conversion by paginated query.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRacksWithPaginationDtoPaginatedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRacksWithPaginationDtoPaginatedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRacksWithPaginationDtoPaginatedResultResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Store": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetStore",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetStoreDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetStoreDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetStoreDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Store"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateStore",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Store"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Store/{id}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Store"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/SubCategory/GetSubCategories": {
      "get": {
        "tags": [
          "SubCategory"
        ],
        "summary": "Retrieves all BrandItemType entities with optional navigation properties.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetSubCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetSubCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetSubCategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/SubCategory/{id}": {
      "get": {
        "tags": [
          "SubCategory"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubCategory"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/SubCategory": {
      "post": {
        "tags": [
          "SubCategory"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateSubCategory",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SubCategory"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Supplier": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Retrieves all suppliers.",
        "operationId": "GetSupplier",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetSupplierDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetSupplierDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetSupplierDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Creates a new supplier.",
        "operationId": "CreateSupplier",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the supplier to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Supplier"
        ],
        "summary": "Updates an existing supplier.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the supplier updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Supplier/{id}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Retrieves an supplier by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the supplier to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Deletes an supplier by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the supplier to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/UOM": {
      "get": {
        "tags": [
          "UOM"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetUOM",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUOMDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUOMDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUOMDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UOM"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateUOM",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UOM"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/UOM/{id}": {
      "get": {
        "tags": [
          "UOM"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UOM"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/UOMConversion": {
      "get": {
        "tags": [
          "UOMConversion"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetUOMConversion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUOMConversionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUOMConversionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUOMConversionDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UOMConversion"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateUOMConversion",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMConversionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMConversionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMConversionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMConversionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UOMConversion"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMConversionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMConversionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMConversionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMConversionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/UOMConversion/{id}": {
      "get": {
        "tags": [
          "UOMConversion"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUOMConversionDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UOMConversion"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/UOMConversion/paged": {
      "get": {
        "tags": [
          "UOMConversion"
        ],
        "summary": "Get a uom conversion by paginated query.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUomConversionsWithPaginationDtoPaginatedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUomConversionsWithPaginationDtoPaginatedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUomConversionsWithPaginationDtoPaginatedResultResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Warehouse": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetWarehouse",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetWarehouseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetWarehouseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetWarehouseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateWarehouse",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Warehouse/{id}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWarehouseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inv/Zone": {
      "get": {
        "tags": [
          "Zone"
        ],
        "summary": "Retrieves all asset types.",
        "operationId": "GetZone",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetZoneDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetZoneDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetZoneDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Zone"
        ],
        "summary": "Creates a new asset type.",
        "operationId": "CreateZone",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type to be created.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateZoneDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateZoneDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateZoneDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateZoneDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Zone"
        ],
        "summary": "Updates an existing asset type.",
        "parameters": [
          {
            "name": "uniquePropertyNames",
            "in": "query",
            "description": "Optional: Array of property names to check for uniqueness.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "The DTO representing the asset type updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateZoneDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateZoneDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateZoneDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateZoneDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inv/Zone/{id}": {
      "get": {
        "tags": [
          "Zone"
        ],
        "summary": "Retrieves an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Zone"
        ],
        "summary": "Deletes an asset type by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset type to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/SecurityRuleSet"
          }
        },
        "additionalProperties": false
      },
      "CallingConventions": {
        "enum": [
          1,
          2,
          3,
          32,
          64
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          }
        },
        "additionalProperties": false
      },
      "CreateBinLocationCommand": {
        "required": [
          "binLctn",
          "binName",
          "column",
          "compartment",
          "comSerialID",
          "itemConditionId",
          "itemSerialID",
          "rackSerialID",
          "row",
          "storeSerialID",
          "whSerialID",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "binName": {
            "minLength": 1,
            "type": "string"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "rackSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "binLctn": {
            "minLength": 1,
            "type": "string"
          },
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "minLength": 1,
            "type": "string"
          },
          "compartment": {
            "type": "integer",
            "format": "int32"
          },
          "itemConditionId": {
            "type": "integer",
            "format": "int32"
          },
          "isVoidBinLocation": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateBrandDto": {
        "required": [
          "brandName"
        ],
        "type": "object",
        "properties": {
          "brandName": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[A-Z][A-Za-z0-9]*(?: [A-Z0-9][A-Za-z0-9]*)*$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateBrandItemTypeCommand": {
        "required": [
          "brandSerialID",
          "itemTypes"
        ],
        "type": "object",
        "properties": {
          "itemTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateCompatibleItemDto": {
        "required": [
          "itemCompatibleSerialID",
          "itemSerialID"
        ],
        "type": "object",
        "properties": {
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemCompatibleSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateCusPriceCategoryDto": {
        "required": [
          "cusPriceCatName"
        ],
        "type": "object",
        "properties": {
          "cusPriceCatName": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[A-Z][A-Za-z0-9]*(?: [A-Z0-9][A-Za-z0-9]*)*$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateGRNDto": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateInvoiceDto": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateItemCommand": {
        "required": [
          "brandSerialID",
          "itemTypeSerialID",
          "mainCategorySerialID",
          "modelSerialID",
          "subCategorySerialID",
          "uomSerialID"
        ],
        "type": "object",
        "properties": {
          "itemTypeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "mainCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "subCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "modelSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "itemPartNo": {
            "type": "string",
            "nullable": true
          },
          "article": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "guage": {
            "type": "string",
            "nullable": true
          },
          "construction": {
            "type": "string",
            "nullable": true
          },
          "specialFeatures": {
            "type": "string",
            "nullable": true
          },
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "userMsgGrpSerialIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "receiverUserSerialIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateItemTypeDto": {
        "required": [
          "itemTypeName"
        ],
        "type": "object",
        "properties": {
          "itemTypeName": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[A-Z][A-Za-z0-9]*(?: [A-Z0-9][A-Za-z0-9]*)*$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateMainCategoryDto": {
        "required": [
          "mainCategoryName"
        ],
        "type": "object",
        "properties": {
          "mainCategoryName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateModelDto": {
        "required": [
          "brandSerialID",
          "modelName"
        ],
        "type": "object",
        "properties": {
          "modelName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateRackCommand": {
        "required": [
          "columns",
          "comSerialID",
          "rackCode",
          "rackName",
          "rows",
          "storeSerialID",
          "whSerialID",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "rackName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "rackCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "rows": {
            "type": "integer",
            "format": "int32"
          },
          "columns": {
            "type": "integer",
            "format": "int32"
          },
          "compartments": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateStoreDto": {
        "required": [
          "comSerialID",
          "storeName",
          "whSerialID"
        ],
        "type": "object",
        "properties": {
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateSubCategoryDto": {
        "required": [
          "subCategoryName"
        ],
        "type": "object",
        "properties": {
          "subCategoryName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "mainCategorySerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateSupplierDto": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateUOMConversionDto": {
        "required": [
          "conversionDescription",
          "conversionRate",
          "uomSerialID",
          "uomToID"
        ],
        "type": "object",
        "properties": {
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomToID": {
            "type": "integer",
            "format": "int32"
          },
          "conversionRate": {
            "type": "number",
            "format": "double"
          },
          "conversionDescription": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateUOMDto": {
        "required": [
          "uomDescription",
          "uomName"
        ],
        "type": "object",
        "properties": {
          "uomName": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "uomDescription": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateWarehouseDto": {
        "required": [
          "address1",
          "comSerialID",
          "whName"
        ],
        "type": "object",
        "properties": {
          "whName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "address1": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "address2": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address3": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateZoneDto": {
        "required": [
          "comSerialID",
          "storeSerialID",
          "whSerialID",
          "zoneName"
        ],
        "type": "object",
        "properties": {
          "zoneName": {
            "maxLength": 30,
            "minLength": 3,
            "pattern": "^[A-Z][a-zA-Z\\s]*$",
            "type": "string"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventAttributes": {
        "enum": [
          0,
          512,
          1024
        ],
        "type": "integer",
        "format": "int32"
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/Type"
          }
        },
        "additionalProperties": false
      },
      "Exception": {
        "type": "object",
        "properties": {
          "targetSite": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "innerException": {
            "$ref": "#/components/schemas/Exception"
          },
          "helpLink": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "hResult": {
            "type": "integer",
            "format": "int32"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FieldAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          4096,
          8192,
          32768,
          38144
        ],
        "type": "integer",
        "format": "int32"
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/RuntimeFieldHandle"
          }
        },
        "additionalProperties": false
      },
      "GenericParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          28
        ],
        "type": "integer",
        "format": "int32"
      },
      "GetBinLocationDto": {
        "required": [
          "binLctn",
          "binLctnSerialID",
          "binName",
          "column",
          "columns",
          "compartment",
          "comSerialID",
          "itemSerialID",
          "rackCode",
          "rackName",
          "rackSerialID",
          "row",
          "storeName",
          "storeSerialID",
          "whName",
          "whSerialID",
          "zoneName",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "binLctnSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "binName": {
            "minLength": 1,
            "type": "string"
          },
          "binLctn": {
            "minLength": 1,
            "type": "string"
          },
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "minLength": 1,
            "type": "string"
          },
          "columns": {
            "type": "integer",
            "format": "int32"
          },
          "compartment": {
            "type": "integer",
            "format": "int32"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whName": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "rackSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "rackName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "rackCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetBinLocationsWithPaginationDto": {
        "required": [
          "binLctn",
          "binLctnSerialID",
          "binName",
          "column",
          "compartment",
          "comSerialID",
          "id",
          "itemCode",
          "itemSerialID",
          "rackCode",
          "rackName",
          "rackSerialID",
          "row",
          "storeSerialID",
          "whSerialID",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "binLctnSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "binName": {
            "minLength": 1,
            "type": "string"
          },
          "binLctn": {
            "minLength": 1,
            "type": "string"
          },
          "rackSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "rackName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "rackCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "minLength": 1,
            "type": "string"
          },
          "compartment": {
            "type": "integer",
            "format": "int32"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whName": {
            "type": "string",
            "nullable": true
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneName": {
            "type": "string",
            "nullable": true
          },
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemCode": {
            "minLength": 1,
            "type": "string"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "itemPartNo": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetBinLocationsWithPaginationDtoPaginatedResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetBinLocationsWithPaginationDto"
            },
            "nullable": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetBinLocationsWithPaginationDtoPaginatedResultResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GetBinLocationsWithPaginationDtoPaginatedResult"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetBrandDto": {
        "required": [
          "brandName",
          "brandSerialID"
        ],
        "type": "object",
        "properties": {
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "brandName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetBrandItemTypeDto": {
        "required": [
          "bitSerialID",
          "brandName",
          "brandSerialID",
          "itemTypeName",
          "itemTypeSerialID"
        ],
        "type": "object",
        "properties": {
          "bitSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemTypeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "brandName": {
            "minLength": 1,
            "type": "string"
          },
          "itemTypeName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetCompatibleItemDto": {
        "required": [
          "compatibleItemSerialID",
          "itemCompatibleSerialID",
          "itemSerialID"
        ],
        "type": "object",
        "properties": {
          "compatibleItemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemCompatibleSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetCusPriceCategoryDto": {
        "required": [
          "cusPriceCatName",
          "cusPriceCatSerialID"
        ],
        "type": "object",
        "properties": {
          "cusPriceCatSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "cusPriceCatName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetGRNDto": {
        "required": [
          "grnNumber",
          "grnSerialID"
        ],
        "type": "object",
        "properties": {
          "grnSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "grnNumber": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetInvoiceByGRNDto": {
        "required": [
          "invoiceDate",
          "invoiceNumber",
          "invoiceSerialID",
          "supplierName",
          "supplierSerialID"
        ],
        "type": "object",
        "properties": {
          "invoiceSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNumber": {
            "minLength": 1,
            "type": "string"
          },
          "supplierSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "supplierName": {
            "minLength": 1,
            "type": "string"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetInvoiceDto": {
        "required": [
          "invoiceNumber",
          "invoiceSerialId"
        ],
        "type": "object",
        "properties": {
          "invoiceSerialId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNumber": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetItemCodeDto": {
        "required": [
          "itemCode",
          "itemSerialID"
        ],
        "type": "object",
        "properties": {
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemCode": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetItemDto": {
        "required": [
          "article",
          "brandName",
          "brandSerialID",
          "color",
          "itemCode",
          "itemDes",
          "itemPartNo",
          "itemSerialID",
          "itemTypeSerialID",
          "mainCategoryName",
          "mainCategorySerialID",
          "modelName",
          "modelSerialID",
          "size",
          "subCategoryName",
          "subCategorySerialID",
          "uomSerialID",
          "volume",
          "weight"
        ],
        "type": "object",
        "properties": {
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemCode": {
            "minLength": 1,
            "type": "string"
          },
          "itemTypeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemDes": {
            "minLength": 1,
            "type": "string"
          },
          "mainCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "subCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "modelSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "mainCategoryName": {
            "minLength": 1,
            "type": "string"
          },
          "subCategoryName": {
            "minLength": 1,
            "type": "string"
          },
          "brandName": {
            "minLength": 1,
            "type": "string"
          },
          "modelName": {
            "minLength": 1,
            "type": "string"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "size": {
            "minLength": 1,
            "type": "string"
          },
          "color": {
            "minLength": 1,
            "type": "string"
          },
          "itemPartNo": {
            "minLength": 1,
            "type": "string"
          },
          "itemTypeName": {
            "type": "string",
            "nullable": true
          },
          "article": {
            "minLength": 1,
            "type": "string"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "guage": {
            "type": "string",
            "nullable": true
          },
          "construction": {
            "type": "string",
            "nullable": true
          },
          "specialFeatures": {
            "type": "string",
            "nullable": true
          },
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "approvedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetItemTypeDto": {
        "required": [
          "itemTypeName",
          "itemTypeSerialID"
        ],
        "type": "object",
        "properties": {
          "itemTypeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemTypeName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetItemsWithPaginationDto": {
        "required": [
          "brandSerialID",
          "id",
          "itemCode",
          "itemDes",
          "itemID",
          "itemSerialID",
          "itemTypeSerialID",
          "mainCategorySerialID",
          "modelSerialID",
          "subCategorySerialID",
          "uomSerialID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemID": {
            "type": "integer",
            "format": "int32"
          },
          "itemCode": {
            "minLength": 1,
            "type": "string"
          },
          "itemTypeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemDes": {
            "minLength": 1,
            "type": "string"
          },
          "mainCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "subCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "modelSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "itemPartNo": {
            "type": "string",
            "nullable": true
          },
          "article": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "guage": {
            "type": "string",
            "nullable": true
          },
          "construction": {
            "type": "string",
            "nullable": true
          },
          "specialFeatures": {
            "type": "string",
            "nullable": true
          },
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "mainCategoryName": {
            "type": "string",
            "nullable": true
          },
          "itemTypeName": {
            "type": "string",
            "nullable": true
          },
          "subCategoryName": {
            "type": "string",
            "nullable": true
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "uomName": {
            "type": "string",
            "nullable": true
          },
          "approvedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approved": {
            "type": "string",
            "nullable": true
          },
          "approvedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetItemsWithPaginationDtoPaginatedResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetItemsWithPaginationDto"
            },
            "nullable": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetItemsWithPaginationDtoPaginatedResultResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GetItemsWithPaginationDtoPaginatedResult"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetMainCategoryDto": {
        "required": [
          "mainCategoryName",
          "mainCategorySerialID"
        ],
        "type": "object",
        "properties": {
          "mainCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "mainCategoryName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetModelDto": {
        "required": [
          "brandSerialID",
          "modelName",
          "modelSerialID"
        ],
        "type": "object",
        "properties": {
          "modelSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRackDto": {
        "required": [
          "columns",
          "comSerialID",
          "rackCode",
          "rackName",
          "rackSerialID",
          "rows",
          "storeSerialID",
          "whSerialID",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "rackSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "rackName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "rackCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "rows": {
            "type": "integer",
            "format": "int32"
          },
          "columns": {
            "type": "integer",
            "format": "int32"
          },
          "compartments": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetRacksWithPaginationDto": {
        "required": [
          "columns",
          "comSerialID",
          "id",
          "rackCode",
          "rackName",
          "rackSerialID",
          "rows",
          "storeSerialID",
          "whSerialID",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "rackSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "rackName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "rackCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "rows": {
            "type": "integer",
            "format": "int32"
          },
          "columns": {
            "type": "integer",
            "format": "int32"
          },
          "compartments": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whName": {
            "type": "string",
            "nullable": true
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "store": {
            "type": "string",
            "nullable": true
          },
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneName": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRacksWithPaginationDtoPaginatedResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetRacksWithPaginationDto"
            },
            "nullable": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetRacksWithPaginationDtoPaginatedResultResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GetRacksWithPaginationDtoPaginatedResult"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetStoreDto": {
        "required": [
          "comSerialID",
          "storeName",
          "storeSerialID",
          "whSerialID"
        ],
        "type": "object",
        "properties": {
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetSubCategoryDto": {
        "required": [
          "subCategoryName",
          "subCategorySerialID"
        ],
        "type": "object",
        "properties": {
          "subCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "subCategoryName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "mainCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "mainCategoryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSupplierDto": {
        "required": [
          "supplierName",
          "supplierSerialId"
        ],
        "type": "object",
        "properties": {
          "supplierSerialId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetUOMConversionDto": {
        "required": [
          "conversionDescription",
          "conversionRate",
          "uomConvSerialID",
          "uomDescription",
          "uomDescriptionTo",
          "uomSerialID",
          "uomToID"
        ],
        "type": "object",
        "properties": {
          "uomConvSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomToID": {
            "type": "integer",
            "format": "int32"
          },
          "conversionRate": {
            "type": "integer",
            "format": "int32"
          },
          "conversionDescription": {
            "minLength": 1,
            "type": "string"
          },
          "uomDescription": {
            "minLength": 1,
            "type": "string"
          },
          "uomDescriptionTo": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetUOMDto": {
        "required": [
          "uomDescription",
          "uomName",
          "uomSerialID"
        ],
        "type": "object",
        "properties": {
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomName": {
            "maxLength": 5,
            "minLength": 1,
            "type": "string"
          },
          "uomDescription": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetUomConversionsWithPaginationDto": {
        "required": [
          "conversionRate",
          "id",
          "uomConvSerialID",
          "uomName",
          "uomSerialID",
          "uomToID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uomConvSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomToID": {
            "type": "integer",
            "format": "int32"
          },
          "conversionRate": {
            "type": "integer",
            "format": "int32"
          },
          "uomName": {
            "minLength": 1,
            "type": "string"
          },
          "uomNameTo": {
            "type": "string",
            "nullable": true
          },
          "uomDescription": {
            "type": "string",
            "nullable": true
          },
          "uomDescriptionTo": {
            "type": "string",
            "nullable": true
          },
          "conversionDescription": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUomConversionsWithPaginationDtoPaginatedResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUomConversionsWithPaginationDto"
            },
            "nullable": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetUomConversionsWithPaginationDtoPaginatedResultResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GetUomConversionsWithPaginationDtoPaginatedResult"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetWarehouseDto": {
        "required": [
          "address1",
          "comSerialID",
          "whName",
          "whSerialID"
        ],
        "type": "object",
        "properties": {
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whName": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "address1": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "address2": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address3": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetZoneDto": {
        "required": [
          "comSerialID",
          "storeSerialID",
          "whSerialID",
          "zoneName"
        ],
        "type": "object",
        "properties": {
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "Int32Result": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "type": "integer",
            "format": "int32"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "InvoiceItemDto": {
        "required": [
          "billedAmount",
          "billedQty",
          "itemSerialID",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "billedQty": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "billedAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LayoutKind": {
        "enum": [
          0,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberTypes": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          191
        ],
        "type": "integer",
        "format": "int32"
      },
      "MethodAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          2048,
          4096,
          8192,
          16384,
          32768,
          53248
        ],
        "type": "integer",
        "format": "int32"
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MethodImplAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          4096,
          65535
        ],
        "type": "integer",
        "format": "int32"
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/ICustomAttributeProvider"
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          4096,
          8192,
          16384,
          32768,
          61440
        ],
        "type": "integer",
        "format": "int32"
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PropertyAttributes": {
        "enum": [
          0,
          512,
          1024,
          4096,
          8192,
          16384,
          32768,
          62464
        ],
        "type": "integer",
        "format": "int32"
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "SecurityRuleSet": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "StringResult": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "typeId": {
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/LayoutKind"
          }
        },
        "additionalProperties": false
      },
      "Type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TypeAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          24,
          32,
          128,
          256,
          1024,
          2048,
          4096,
          8192,
          16384,
          65536,
          131072,
          196608,
          262144,
          264192,
          1048576,
          12582912
        ],
        "type": "integer",
        "format": "int32"
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBinLocationCommand": {
        "required": [
          "binLctn",
          "binLctnSerialID",
          "binName",
          "column",
          "compartment",
          "comSerialID",
          "itemConditionId",
          "itemSerialID",
          "rackSerialID",
          "row",
          "storeSerialID",
          "whSerialID",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "binLctnSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "binName": {
            "minLength": 1,
            "type": "string"
          },
          "binLctn": {
            "minLength": 1,
            "type": "string"
          },
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "minLength": 1,
            "type": "string"
          },
          "compartment": {
            "type": "integer",
            "format": "int32"
          },
          "rackSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemConditionId": {
            "type": "integer",
            "format": "int32"
          },
          "isVoidBinLocation": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateBrandDto": {
        "required": [
          "brandName",
          "brandSerialID"
        ],
        "type": "object",
        "properties": {
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "brandName": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[A-Z][A-Za-z0-9]*(?: [A-Z0-9][A-Za-z0-9]*)*$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateBrandItemTypeCommand": {
        "required": [
          "brandSerialID",
          "itemTypes"
        ],
        "type": "object",
        "properties": {
          "itemTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateCompatibleItemDto": {
        "required": [
          "compatibleItemSerialID",
          "itemCompatibleSerialID",
          "itemSerialID"
        ],
        "type": "object",
        "properties": {
          "compatibleItemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemCompatibleSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateCusPriceCategoryDto": {
        "required": [
          "cusPriceCatName",
          "cusPriceCatSerialID"
        ],
        "type": "object",
        "properties": {
          "cusPriceCatSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "cusPriceCatName": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[A-Z][A-Za-z0-9]*(?: [A-Z0-9][A-Za-z0-9]*)*$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateGRNDto": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdateInvoiceDto": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdateItemCommand": {
        "required": [
          "itemSerialID",
          "uomSerialID"
        ],
        "type": "object",
        "properties": {
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "itemPartNo": {
            "type": "string",
            "nullable": true
          },
          "article": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "guage": {
            "type": "string",
            "nullable": true
          },
          "construction": {
            "type": "string",
            "nullable": true
          },
          "specialFeatures": {
            "type": "string",
            "nullable": true
          },
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "approvedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateItemDto": {
        "required": [
          "itemSerialID",
          "uomSerialID"
        ],
        "type": "object",
        "properties": {
          "itemSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "itemPartNo": {
            "type": "string",
            "nullable": true
          },
          "article": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "guage": {
            "type": "string",
            "nullable": true
          },
          "construction": {
            "type": "string",
            "nullable": true
          },
          "specialFeatures": {
            "type": "string",
            "nullable": true
          },
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateItemTypeDto": {
        "required": [
          "itemTypeName",
          "itemTypeSerialID"
        ],
        "type": "object",
        "properties": {
          "itemTypeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "itemTypeName": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[A-Z][A-Za-z0-9]*(?: [A-Z0-9][A-Za-z0-9]*)*$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateMainCategoryDto": {
        "required": [
          "mainCategoryName",
          "mainCategorySerialID"
        ],
        "type": "object",
        "properties": {
          "mainCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "mainCategoryName": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[A-Z][A-Za-z0-9]*(?: [A-Z0-9][A-Za-z0-9]*)*$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateModelDto": {
        "required": [
          "brandSerialID",
          "modelName",
          "modelSerialID"
        ],
        "type": "object",
        "properties": {
          "modelSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "brandSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateRackCommand": {
        "required": [
          "columns",
          "comSerialID",
          "rackName",
          "rackSerialID",
          "rows",
          "storeSerialID",
          "whSerialID",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "rackSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "rackName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "rows": {
            "type": "integer",
            "format": "int32"
          },
          "columns": {
            "type": "integer",
            "format": "int32"
          },
          "compartments": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateStoreDto": {
        "required": [
          "comSerialID",
          "storeName",
          "storeSerialID",
          "whSerialID"
        ],
        "type": "object",
        "properties": {
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateSubCategoryDto": {
        "required": [
          "subCategoryName"
        ],
        "type": "object",
        "properties": {
          "subCategorySerialID": {
            "type": "integer",
            "format": "int32"
          },
          "subCategoryName": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[A-Z][A-Za-z0-9]*(?: [A-Z0-9][A-Za-z0-9]*)*$",
            "type": "string"
          },
          "mainCategorySerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateSupplierDto": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdateUOMConversionDto": {
        "required": [
          "conversionDescription",
          "conversionRate",
          "uomConvSerialID",
          "uomSerialID",
          "uomToID"
        ],
        "type": "object",
        "properties": {
          "uomConvSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomToID": {
            "type": "integer",
            "format": "int32"
          },
          "conversionRate": {
            "type": "number",
            "format": "double"
          },
          "conversionDescription": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateUOMDto": {
        "required": [
          "uomDescription",
          "uomName",
          "uomSerialID"
        ],
        "type": "object",
        "properties": {
          "uomSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "uomName": {
            "maxLength": 5,
            "minLength": 1,
            "type": "string"
          },
          "uomDescription": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateWarehouseDto": {
        "required": [
          "address1",
          "comSerialID",
          "whName",
          "whSerialID"
        ],
        "type": "object",
        "properties": {
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whName": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "address1": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "address2": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address3": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateZoneDto": {
        "required": [
          "comSerialID",
          "storeSerialID",
          "whSerialID",
          "zoneName",
          "zoneSerialID"
        ],
        "type": "object",
        "properties": {
          "zoneSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "zoneName": {
            "maxLength": 30,
            "minLength": 3,
            "pattern": "^[A-Z][a-zA-Z\\s]*$",
            "type": "string"
          },
          "comSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "whSerialID": {
            "type": "integer",
            "format": "int32"
          },
          "storeSerialID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}