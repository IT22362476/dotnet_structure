// <auto-generated />
using System;
using Inv.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inv.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241126062908_initial2")]
    partial class initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Inv")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("BITID", "dbo");

            modelBuilder.HasSequence<int>("BrandID", "dbo");

            modelBuilder.HasSequence<int>("ItemID", "dbo");

            modelBuilder.HasSequence<int>("ItemTypeID", "dbo")
                .StartsAt(10L);

            modelBuilder.HasSequence<int>("MainCategoryID", "dbo");

            modelBuilder.HasSequence<int>("ModelID", "dbo");

            modelBuilder.HasSequence<int>("SubCategoryID", "dbo");

            modelBuilder.HasSequence<int>("UOMConvID", "dbo");

            modelBuilder.HasSequence<int>("UOMID", "dbo");

            modelBuilder.Entity("Inv.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("BrandSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.BrandID");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BrandSerialID");

                    b.HasIndex("BrandID")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.ToTable("Brand", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.BrandItemType", b =>
                {
                    b.Property<int>("BITSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BITSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BITID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BITID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.BITID");

                    b.Property<int>("BrandSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemTypeSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BITSerialID");

                    b.HasIndex("BITID")
                        .IsUnique();

                    b.HasIndex("BrandSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ItemTypeSerialID");

                    b.ToTable("BrandItemType", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Item", b =>
                {
                    b.Property<int>("ItemSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BrandSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Construction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItemID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.ItemID");

                    b.Property<string>("ItemPartNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemTypeSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<int?>("MainCategorySerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ModelSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubCategorySerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UOMSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("ItemSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ItemID")
                        .IsUnique();

                    b.ToTable("Item", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.ItemType", b =>
                {
                    b.Property<int>("ItemTypeSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemTypeSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItemTypeID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.ItemTypeID");

                    b.Property<string>("ItemTypeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemTypeSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ItemTypeID")
                        .IsUnique();

                    b.ToTable("ItemType", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.MainCategory", b =>
                {
                    b.Property<int>("MainCategorySerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MainCategorySerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MainCategoryID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.MainCategoryID");

                    b.Property<string>("MainCategoryName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MainCategorySerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("MainCategoryID")
                        .IsUnique();

                    b.ToTable("MainCategory", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Model", b =>
                {
                    b.Property<int>("ModelSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BrandSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ModelID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.ModelID");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ModelSerialID");

                    b.HasIndex("BrandSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ModelID")
                        .IsUnique();

                    b.ToTable("Model", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Parameter", b =>
                {
                    b.Property<int>("ParamSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParamSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastID")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParamID")
                        .HasColumnType("int");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ParamSerialID");

                    b.ToTable("Parameter", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.SubCategory", b =>
                {
                    b.Property<int>("SubCategorySerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategorySerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainCategorySerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubCategoryID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.SubCategoryID");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("SubCategorySerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("MainCategorySerialID");

                    b.HasIndex("SubCategoryID")
                        .IsUnique();

                    b.ToTable("SubCategory", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.UOM", b =>
                {
                    b.Property<int>("UOMSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UOMSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UOMDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UOMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UOMID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.UOMID");

                    b.Property<string>("UOMName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("UOMSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("UOMID")
                        .IsUnique();

                    b.ToTable("UOM", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.UOMConversion", b =>
                {
                    b.Property<int>("UOMConvSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UOMConvSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConversionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UOMConvID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UOMConvID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.UOMConvID");

                    b.Property<int>("UOMSerialID")
                        .HasColumnType("int");

                    b.Property<int>("UOMToID")
                        .HasColumnType("int");

                    b.HasKey("UOMConvSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("UOMConvID")
                        .IsUnique();

                    b.HasIndex("UOMSerialID");

                    b.ToTable("UOMConversion", "Inv");
                });

            modelBuilder.Entity("Inv.Persistence.Audit.AuditTrail", b =>
                {
                    b.Property<long>("AudtTralID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AudtTralID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuditDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrmSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("LoginLogSerialID")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("AudtTralID");

                    b.ToTable("AuditTrail", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.BrandItemType", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Brand", "Brand")
                        .WithMany("BrandItemType")
                        .HasForeignKey("BrandSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.ItemType", "ItemType")
                        .WithMany("BrandItemType")
                        .HasForeignKey("ItemTypeSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Model", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Inv.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("Inv.Domain.Entities.MainCategory", "MainCategory")
                        .WithMany()
                        .HasForeignKey("MainCategorySerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("Inv.Domain.Entities.UOMConversion", b =>
                {
                    b.HasOne("Inv.Domain.Entities.UOM", "UOM")
                        .WithMany()
                        .HasForeignKey("UOMSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UOM");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Brand", b =>
                {
                    b.Navigation("BrandItemType");
                });

            modelBuilder.Entity("Inv.Domain.Entities.ItemType", b =>
                {
                    b.Navigation("BrandItemType");
                });
#pragma warning restore 612, 618
        }
    }
}
