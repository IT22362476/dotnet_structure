// <auto-generated />
using System;
using Inv.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inv.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250311201801_initial13")]
    partial class initial13
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Inv")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("BinLctnID", "dbo");

            modelBuilder.HasSequence<int>("BITID", "dbo");

            modelBuilder.HasSequence<int>("BrandID", "dbo");

            modelBuilder.HasSequence<int>("CompatibleItemlID", "dbo");

            modelBuilder.HasSequence<int>("CusPriceCatID", "dbo");

            modelBuilder.HasSequence<int>("GRNID", "dbo");

            modelBuilder.HasSequence<int>("GRNLineItemID", "dbo");

            modelBuilder.HasSequence<int>("InvoiceID", "dbo");

            modelBuilder.HasSequence<int>("InvoiceItemID", "dbo");

            modelBuilder.HasSequence<int>("ItemID", "dbo");

            modelBuilder.HasSequence<int>("ItemTypeID", "dbo")
                .StartsAt(10L);

            modelBuilder.HasSequence<int>("MainCategoryID", "dbo");

            modelBuilder.HasSequence<int>("ModelID", "dbo");

            modelBuilder.HasSequence<int>("POID", "dbo");

            modelBuilder.HasSequence<int>("POItemID", "dbo");

            modelBuilder.HasSequence<int>("RackID", "dbo");

            modelBuilder.HasSequence<int>("StoreID", "dbo");

            modelBuilder.HasSequence<int>("SubCategoryID", "dbo");

            modelBuilder.HasSequence<int>("SupplierId", "dbo");

            modelBuilder.HasSequence<int>("TheNumberID", "dbo");

            modelBuilder.HasSequence<int>("UOMConvID", "dbo");

            modelBuilder.HasSequence<int>("UOMID", "dbo");

            modelBuilder.HasSequence<int>("WHID", "dbo");

            modelBuilder.HasSequence<int>("ZoneID", "dbo");

            modelBuilder.Entity("Inv.Domain.Entities.BinLocation", b =>
                {
                    b.Property<int>("BinLctnSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BinLctnSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BinLctn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BinLctnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.BinLctnID");

                    b.Property<string>("BinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Compartment")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoidBinLocation")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCondition")
                        .HasColumnType("int");

                    b.Property<int>("ItemSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RackSerialID")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int>("StoreSerialID")
                        .HasColumnType("int");

                    b.Property<int>("WHSerialID")
                        .HasColumnType("int");

                    b.Property<int>("ZoneSerialID")
                        .HasColumnType("int");

                    b.HasKey("BinLctnSerialID");

                    b.HasIndex("BinLctnID")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("RackSerialID");

                    b.HasIndex("StoreSerialID");

                    b.HasIndex("WHSerialID");

                    b.HasIndex("ZoneSerialID");

                    b.ToTable("BinLocation", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("BrandSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.BrandID");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BrandSerialID");

                    b.HasIndex("BrandID")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.ToTable("Brand", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.BrandItemType", b =>
                {
                    b.Property<int>("BITSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BITSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BITID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BITID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.BITID");

                    b.Property<int>("BrandSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemTypeSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BITSerialID");

                    b.HasIndex("BITID")
                        .IsUnique();

                    b.HasIndex("BrandSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ItemTypeSerialID");

                    b.ToTable("BrandItemType", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.CompatibleItem", b =>
                {
                    b.Property<int>("CompatibleItemSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompatibleItemSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompatibleItemlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompatibleItemlID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.CompatibleItemlID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCompatibleSerialID")
                        .HasColumnType("int");

                    b.Property<int>("ItemSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CompatibleItemSerialID");

                    b.HasIndex("CompatibleItemlID")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ItemCompatibleSerialID");

                    b.HasIndex("ItemSerialID");

                    b.ToTable("CompatibleItem", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.CusPriceCategory", b =>
                {
                    b.Property<int>("CusPriceCatSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CusPriceCatSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CusPriceCatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CusPriceCatID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.CusPriceCatID");

                    b.Property<string>("CusPriceCatName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CusPriceCatSerialID");

                    b.HasIndex("CusPriceCatID")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.ToTable("CusPriceCategory", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.GRN", b =>
                {
                    b.Property<int>("GRNSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRNSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GRNID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GRNID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.GRNID");

                    b.Property<string>("GRNNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderPOSerialID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierSerialID")
                        .HasColumnType("int");

                    b.HasKey("GRNSerialID");

                    b.HasIndex("GRNID")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("PurchaseOrderPOSerialID");

                    b.HasIndex("SupplierSerialID");

                    b.ToTable("GRN", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.GRNLineItem", b =>
                {
                    b.Property<int>("GRNLineItemSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRNLineItemSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GRNLineItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GRNLineItemID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.GRNLineItemID");

                    b.Property<int>("GRNSerialID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("POItemPOSerialID")
                        .HasColumnType("int");

                    b.Property<int>("POItemSerialID")
                        .HasColumnType("int");

                    b.Property<decimal>("ReceivedQty")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GRNLineItemSerialID");

                    b.HasIndex("GRNLineItemID")
                        .IsUnique();

                    b.HasIndex("GRNSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ItemSerialID");

                    b.HasIndex("POItemPOSerialID");

                    b.ToTable("GRNLineItem", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GRNSerialID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.InvoiceID");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InvoiceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LastNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierSerialID")
                        .HasColumnType("int");

                    b.HasKey("InvoiceSerialID");

                    b.HasIndex("GRNSerialID");

                    b.HasIndex("InvoiceID")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("SupplierSerialID");

                    b.ToTable("Invoice", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.InvoiceItem", b =>
                {
                    b.Property<int>("InvoiceSerialID")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BilledAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BilledQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GRNLineItemSerialID")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceItemID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.InvoiceItemID");

                    b.Property<int>("InvoiceItemSerialID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceSerialID");

                    b.HasIndex("GRNLineItemSerialID");

                    b.HasIndex("InvoiceItemSerialID")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.ToTable("InvoiceItem", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Item", b =>
                {
                    b.Property<int>("ItemSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Article")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BrandSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Construction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guage")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItemID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.ItemID");

                    b.Property<string>("ItemPartNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ItemTypeSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<int?>("MainCategorySerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ModelSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Size")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SpecialFeatures")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SubCategorySerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UOMSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("ItemSerialID");

                    b.HasIndex("BrandSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ItemID")
                        .IsUnique();

                    b.HasIndex("ItemTypeSerialID");

                    b.HasIndex("MainCategorySerialID");

                    b.HasIndex("ModelSerialID");

                    b.HasIndex("SubCategorySerialID");

                    b.ToTable("Item", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.ItemType", b =>
                {
                    b.Property<int>("ItemTypeSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemTypeSerialID"), 10L);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItemTypeID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.ItemTypeID");

                    b.Property<string>("ItemTypeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemTypeSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ItemTypeID")
                        .IsUnique();

                    b.ToTable("ItemType", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.MainCategory", b =>
                {
                    b.Property<int>("MainCategorySerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MainCategorySerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MainCategoryID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.MainCategoryID");

                    b.Property<string>("MainCategoryName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MainCategorySerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("MainCategoryID")
                        .IsUnique();

                    b.ToTable("MainCategory", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Model", b =>
                {
                    b.Property<int>("ModelSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BrandSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ModelID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.ModelID");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ModelSerialID");

                    b.HasIndex("BrandSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("ModelID")
                        .IsUnique();

                    b.ToTable("Model", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.PurchaseOrder", b =>
                {
                    b.Property<int>("POSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("POID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("POID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.POID");

                    b.Property<int>("SupplierSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierSerialId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("POSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("POID")
                        .IsUnique();

                    b.HasIndex("SupplierSerialId");

                    b.ToTable("PurchaseOrder", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.PurchaseOrderItem", b =>
                {
                    b.Property<int>("POSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("POItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("POItemID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.POItemID");

                    b.Property<int>("POItemSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderPOSerialID")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("POSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("POItemID")
                        .IsUnique();

                    b.HasIndex("PurchaseOrderPOSerialID");

                    b.ToTable("PurchaseOrderItem", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Rack", b =>
                {
                    b.Property<int>("RackSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RackSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Columns")
                        .HasColumnType("int");

                    b.Property<int>("ComSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("Compartments")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RackCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.RackID");

                    b.Property<string>("RackName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.Property<int>("StoreSerialID")
                        .HasColumnType("int");

                    b.Property<int>("WHSerialID")
                        .HasColumnType("int");

                    b.Property<int>("ZoneSerialID")
                        .HasColumnType("int");

                    b.HasKey("RackSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("RackID")
                        .IsUnique();

                    b.HasIndex("StoreSerialID");

                    b.HasIndex("WHSerialID");

                    b.HasIndex("ZoneSerialID");

                    b.ToTable("Rack", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Store", b =>
                {
                    b.Property<int>("StoreSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ComSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.StoreID");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("WHSerialID")
                        .HasColumnType("int");

                    b.HasKey("StoreSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("StoreID")
                        .IsUnique();

                    b.HasIndex("WHSerialID");

                    b.ToTable("Store", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.SubCategory", b =>
                {
                    b.Property<int>("SubCategorySerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategorySerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainCategorySerialID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubCategoryID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.SubCategoryID");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("SubCategorySerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("MainCategorySerialID");

                    b.HasIndex("SubCategoryID")
                        .IsUnique();

                    b.ToTable("SubCategory", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierSerialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierSerialId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierId")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.SupplierId");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SupplierSerialId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("SupplierId")
                        .IsUnique();

                    b.ToTable("Supplier", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.TheNumber", b =>
                {
                    b.Property<int>("TheNumberSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TheNumberSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ComSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LastNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TheNumberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.TheNumberID");

                    b.Property<string>("TheNumberName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("TheNumberSerialID");

                    b.ToTable("TheNumbers", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.UOM", b =>
                {
                    b.Property<int>("UOMSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UOMSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UOMDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UOMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UOMID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.UOMID");

                    b.Property<string>("UOMName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("UOMSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("UOMID")
                        .IsUnique();

                    b.ToTable("UOM", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.UOMConversion", b =>
                {
                    b.Property<int>("UOMConvSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UOMConvSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConversionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UOMConvID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UOMConvID")
                        .HasDefaultValueSql("SELECT NEXT VALUE FOR dbo.UOMConvID");

                    b.Property<int>("UOMSerialID")
                        .HasColumnType("int");

                    b.Property<int>("UOMToID")
                        .HasColumnType("int");

                    b.HasKey("UOMConvSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("UOMConvID")
                        .IsUnique();

                    b.HasIndex("UOMSerialID");

                    b.HasIndex("UOMToID");

                    b.ToTable("UOMConversion", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Warehouse", b =>
                {
                    b.Property<int>("WHSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WHSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Address2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Address3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ComSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.WHID");

                    b.Property<string>("WHName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("WHSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("WHID")
                        .IsUnique();

                    b.HasIndex("WHSerialID")
                        .IsUnique();

                    b.ToTable("Warehouse", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Zone", b =>
                {
                    b.Property<int>("ZoneSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZoneSerialID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ComSerialID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreSerialID")
                        .HasColumnType("int");

                    b.Property<int>("WHSerialID")
                        .HasColumnType("int");

                    b.Property<int>("ZoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.ZoneID");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ZoneSerialID");

                    b.HasIndex("IsDeleted")
                        .HasFilter("[IsDeleted] = 1");

                    b.HasIndex("StoreSerialID");

                    b.HasIndex("WHSerialID");

                    b.HasIndex("ZoneID")
                        .IsUnique();

                    b.ToTable("Zone", "Inv");
                });

            modelBuilder.Entity("Inv.Persistence.Audit.AuditTrail", b =>
                {
                    b.Property<long>("AudtTralID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AudtTralID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuditDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrmSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("LoginLogSerialID")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserSerialID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("AudtTralID");

                    b.ToTable("AuditTrail", "Inv");
                });

            modelBuilder.Entity("Inv.Domain.Entities.BinLocation", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Rack", "Rack")
                        .WithMany()
                        .HasForeignKey("RackSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WHSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rack");

                    b.Navigation("Store");

                    b.Navigation("Warehouse");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("Inv.Domain.Entities.BrandItemType", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Brand", "Brand")
                        .WithMany("BrandItemType")
                        .HasForeignKey("BrandSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("Inv.Domain.Entities.CompatibleItem", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Item", "ItemCompatible")
                        .WithMany()
                        .HasForeignKey("ItemCompatibleSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemCompatible");
                });

            modelBuilder.Entity("Inv.Domain.Entities.GRN", b =>
                {
                    b.HasOne("Inv.Domain.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("GRN")
                        .HasForeignKey("PurchaseOrderPOSerialID");

                    b.HasOne("Inv.Domain.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Inv.Domain.Entities.GRNLineItem", b =>
                {
                    b.HasOne("Inv.Domain.Entities.GRN", "GRN")
                        .WithMany("GRNItem")
                        .HasForeignKey("GRNSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemSerialID");

                    b.HasOne("Inv.Domain.Entities.PurchaseOrderItem", "POItem")
                        .WithMany()
                        .HasForeignKey("POItemPOSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GRN");

                    b.Navigation("Item");

                    b.Navigation("POItem");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("Inv.Domain.Entities.GRN", "GRN")
                        .WithMany("Invoice")
                        .HasForeignKey("GRNSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Supplier", "Supplier")
                        .WithMany("Invoices")
                        .HasForeignKey("SupplierSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GRN");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Inv.Domain.Entities.InvoiceItem", b =>
                {
                    b.HasOne("Inv.Domain.Entities.GRNLineItem", "GRNLineItem")
                        .WithMany()
                        .HasForeignKey("GRNLineItemSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GRNLineItem");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Item", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.MainCategory", "MainCategory")
                        .WithMany()
                        .HasForeignKey("MainCategorySerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategorySerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("ItemType");

                    b.Navigation("MainCategory");

                    b.Navigation("Model");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Model", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Inv.Domain.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierSerialId");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Inv.Domain.Entities.PurchaseOrderItem", b =>
                {
                    b.HasOne("Inv.Domain.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItem")
                        .HasForeignKey("PurchaseOrderPOSerialID");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Rack", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WHSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("Warehouse");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Store", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Warehouse", "Warehouse")
                        .WithMany("Stores")
                        .HasForeignKey("WHSerialID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Inv.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("Inv.Domain.Entities.MainCategory", "MainCategory")
                        .WithMany()
                        .HasForeignKey("MainCategorySerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("Inv.Domain.Entities.UOMConversion", b =>
                {
                    b.HasOne("Inv.Domain.Entities.UOM", "UOM")
                        .WithMany()
                        .HasForeignKey("UOMSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.UOM", "UOMTo")
                        .WithMany()
                        .HasForeignKey("UOMToID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UOM");

                    b.Navigation("UOMTo");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Zone", b =>
                {
                    b.HasOne("Inv.Domain.Entities.Store", "Store")
                        .WithMany("Zones")
                        .HasForeignKey("StoreSerialID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inv.Domain.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WHSerialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Brand", b =>
                {
                    b.Navigation("BrandItemType");
                });

            modelBuilder.Entity("Inv.Domain.Entities.GRN", b =>
                {
                    b.Navigation("GRNItem");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("Inv.Domain.Entities.PurchaseOrder", b =>
                {
                    b.Navigation("GRN");

                    b.Navigation("PurchaseOrderItem");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Store", b =>
                {
                    b.Navigation("Zones");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Inv.Domain.Entities.Warehouse", b =>
                {
                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
